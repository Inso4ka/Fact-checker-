"""–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ —á–∞—Å—Ç–∏"""
import re
from typing import Tuple, Optional


def split_conclusion_and_sources(text: str) -> Tuple[str, Optional[str]]:
    """
    –†–∞–∑–¥–µ–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞ –≤—ã–≤–æ–¥ –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
    
    Args:
        text: –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç AI
    
    Returns:
        (conclusion, sources): –ö–æ—Ä—Ç–µ–∂ –∏–∑ –≤—ã–≤–æ–¥–∞ –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ (–∏–ª–∏ None –µ—Å–ª–∏ –Ω–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤)
    """
    # –ò—â–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ò–°–¢–û–ß–ù–ò–ö–ò (—Å HTML —Ç–µ–≥–∞–º–∏ –∏–ª–∏ –±–µ–∑)
    patterns = [
        r'<b>–ò–°–¢–û–ß–ù–ò–ö–ò:</b>',
        r'<b>–ò–°–¢–û–ß–ù–ò–ö–ò</b>',
        r'–ò–°–¢–û–ß–ù–ò–ö–ò:',
        r'üìö\s*–ò–°–¢–û–ß–ù–ò–ö–ò:',
        r'üìö\s*<b>–ò–°–¢–û–ß–ù–ò–ö–ò:</b>',
    ]
    
    for pattern in patterns:
        match = re.search(pattern, text, re.IGNORECASE)
        if match:
            # –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É –∑–∞–≥–æ–ª–æ–≤–∫—É
            conclusion = text[:match.start()].strip()
            sources = text[match.start():].strip()
            return conclusion, sources
    
    # –ï—Å–ª–∏ —Ä–∞–∑–¥–µ–ª –ò–°–¢–û–ß–ù–ò–ö–ò –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç –∫–∞–∫ –≤—ã–≤–æ–¥
    return text.strip(), None
