import asyncio
import logging
from aiogram import Bot, Dispatcher

from app.config import config, logger
from app.db.pool import init_pool, close_pool
from app.clients import perplexity
from app.handlers.admin import admin_router
from app.handlers.user import user_router
from app.background.cleanup import subscription_cleanup_task


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ fact-checker –±–æ—Ç–∞...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    await init_pool(config.database_url)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Perplexity –∫–ª–∏–µ–Ω—Ç–∞
    perplexity.init_client(config.perplexity_api_key)
    perplexity.load_system_prompt()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
    bot = Bot(token=config.telegram_bot_token)
    dp = Dispatcher()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–æ–≤ (–ø–æ—Ä—è–¥–æ–∫ –≤–∞–∂–µ–Ω: —Å–Ω–∞—á–∞–ª–∞ admin, –ø–æ—Ç–æ–º user)
    dp.include_router(admin_router)
    dp.include_router(user_router)
    
    # –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏ –æ—á–∏—Å—Ç–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫ —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –±–æ—Ç–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    cleanup_task = asyncio.create_task(subscription_cleanup_task(bot))
    
    logger.info(f"‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    logger.info(f"üë§ Admin IDs: {', '.join(map(str, config.admin_chat_ids))}")
    
    try:
        # –ó–∞–ø—É—Å–∫ long polling
        await dp.start_polling(bot, skip_updates=True)
    finally:
        # –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
        cleanup_task.cancel()
        try:
            await cleanup_task
        except asyncio.CancelledError:
            pass
        await close_pool()
        await bot.session.close()
        logger.info("üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")


if __name__ == "__main__":
    asyncio.run(main())
